version: 2.1

orbs:
  slack: circleci/slack@4.4.3
  node: circleci/node@4.7.0

executors:
  ozet-excutor:
    environment:
      IMAGE_NAME: ozetteam/ozet-web
      SLACK_APP_PLATFORM: OZET Web
    docker:
      - image: cimg/base:stable
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/workspace
commands:
  slack_chatie_notify:
    description: ""
    parameters:
      header:
        type: string
      img_url:
        type: string
      event:
        description: |
          In what event should this message send? Options: ["fail", "pass", "always"]
        type: enum
        enum: ["fail", "pass", "always"]
        default: "always"
    steps:
      - slack/notify:
          event: << parameters.event >>
          custom: >
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "<< parameters.header >>",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "$(date +'%Y/%m/%d @%T')"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "CircleCI", "emoji": true
                    },
                    "value": "circle_ci_url",
                    "url": "${CIRCLE_BUILD_URL}",
                    "action_id": "button-action"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "> *작업 브랜치* - `$CIRCLE_PROJECT_REPONAME/$CIRCLE_BRANCH`\n> *작업자* - `$CIRCLE_USERNAME`\n>"
                  },
                  "accessory": {
                    "type": "image",
                    "image_url": "<< parameters.img_url >>",
                    "alt_text": "status-image"
                  }
                },
                {
                  "type": "divider"
                }
              ]
            }

jobs:
  build:
    executor: ozet-excutor
    steps:
      - checkout
      - restore_cache:
          keys:
          - deps1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - deps1-
      - run:
          name: Install Environment
          command: |
            touch .misc/env/prod.env
            env > .misc/env/prod.env
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./*
      - persist_to_workspace:
          root: ./
          paths:
            - ./*
      - store_artifacts:
          name: Save artifacts - tests
          path: ~/workspace/app/tests
          destination: tests
  test:
    executor: ozet-excutor
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run tests
          command: |
            echo "test pass"
  deploy_staging:
    executor: ozet-excutor
    parameters:
      deploy_target:
        description: Deploy target name
        type: string
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Install Package
          command: |
            sudo apt-get update
            sudo apt-get install sshpass
      - run:
          name: Install Environment
          command: |
            env > .env
            cp .env prod.env
      - run:
          name: Login to docker hub
          command: |
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
      - run:
          name: Build docker image
          command: |
            docker build --file .misc/docker/Dockerfile -t $IMAGE_NAME:latest .
      - run:
          name: Deploy docker image
          command: |
            docker push $IMAGE_NAME:latest
      - add_ssh_keys:
          fingerprints:
            - "46:11:9d:c5:96:25:09:e4:9a:d1:8c:f9:c4:b6:10:56"
            - "21:16:51:85:ec:f5:69:71:4b:e1:00:44:6b:e2:05:34"
      - run:
          name: Release docker image
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@staging.luxquad.com "sh /docker/ozet-web-docker/deploy.sh"
      - slack_chatie_notify:
          header: "${SLACK_APP_PLATFORM}를 << parameters.deploy_target >>에 성공적으로 배포했습니다 :tada:"
          img_url: "https://user-images.githubusercontent.com/36470472/137059109-560ee9d6-d65a-4bb2-af24-6010e6474114.png"
          event: pass
      - slack_chatie_notify:
          header: "${SLACK_APP_PLATFORM}를 << parameters.deploy_target >>에 배포하는 중에 문제가 발생했습니다 :warning:"
          img_url: "https://user-images.githubusercontent.com/36470472/137059112-9b61b095-8f45-4956-8734-7c146276c37d.png"
          event: fail
  deploy_production:
    executor: ozet-excutor
    parameters:
      deploy_target:
        description: Deploy target name
        type: string
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Install Package
          command: |
            sudo apt-get update
            sudo apt-get install sshpass
      - run:
          name: Install Environment
          command: |
            env > .env
            cp .env prod.env
      - run:
          name: Login to docker hub
          command: |
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
      - run:
          name: Build docker image
          command: |
            docker build --file .misc/docker/Dockerfile -t $IMAGE_NAME:latest .
      - run:
          name: Deploy docker image
          command: |
            docker push $IMAGE_NAME:latest
      - add_ssh_keys:
          fingerprints:
            - "46:11:9d:c5:96:25:09:e4:9a:d1:8c:f9:c4:b6:10:56"
            - "21:16:51:85:ec:f5:69:71:4b:e1:00:44:6b:e2:05:34"
      - run:
          name: Release docker image
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@luxquad.com "sh /docker/ozet-web-docker/deploy.sh"
      - slack_chatie_notify:
          header: "${SLACK_APP_PLATFORM}를 << parameters.deploy_target >>에 성공적으로 배포했습니다 :tada:"
          img_url: "https://user-images.githubusercontent.com/36470472/137059103-c8699f6d-8297-4e96-b2b3-2c894acee860.png"
          event: pass
      - slack_chatie_notify:
          header: "${SLACK_APP_PLATFORM}를 << parameters.deploy_target >>에 배포하는 중에 문제가 발생했습니다 :warning:"
          img_url: "https://user-images.githubusercontent.com/36470472/137059111-844904f8-9ba6-4e46-9a06-2934ce318b76.png"
          event: fail
workflows:
  build-with-test:
    jobs:
      - build:
          filters: &filters-build-with-test
            branches:
              only:
                - /^(enhance)[/].+/
                - /^(feature)[/].+/
                - /^(hotfix)[/].+/
                - /^(fix)[/].+/

      - test:
          requires:
            - build
          filters:
            <<: *filters-build-with-test

  deploy_staging:
    jobs:
      - build:
          filters: &filters-deploy
            branches:
              only:
                - develop
                - /^(circleci)[/].+/

      - test:
          requires:
            - build
          filters:
            <<: *filters-deploy

      - deploy_staging:
          requires:
            - test
          filters:
            <<: *filters-deploy
          deploy_target: "스테이징 웹"

  deploy_production:
    jobs:
      - build:
          filters: &filters-deploy
            branches:
              only:
                - master

      - test:
          requires:
            - build
          filters:
            <<: *filters-deploy

      - deploy_production:
          requires:
            - test
          filters:
            <<: *filters-deploy
          deploy_target: "프로덕션 웹"